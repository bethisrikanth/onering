{% if device.properties.provisioning.hostname == empty or device.properties.provisioning.hostname == nil %}
  {% capture hostname %}{{ device.id }}.hw.outbrain.com{% endcapture %}
{% else %}
  {% assign hostname = device.properties.provisioning.hostname %}
{% endif %}
# -----------------------------------------------------------------------------
# post: network

# set the gateway in the network configuration file
grep -v GATEWAY /etc/sysconfig/network > /etc/sysconfig/network.tmp
echo "GATEWAY={{ device.properties.provisioning.network.gateway }}" >> /etc/sysconfig/network.tmp
rm -f /etc/sysconfig/network
mv /etc/sysconfig/network.tmp /etc/sysconfig/network

# update /etc/hosts with the new hostname
sed -i 's/localhost.localdomain/{{ hostname }}/' /etc/hosts

# set the hostname in the network configuration file
grep -v HOSTNAME /etc/sysconfig/network > /etc/sysconfig/network.tmp
echo "HOSTNAME={{ hostname }}" >> /etc/sysconfig/network.tmp
rm -f /etc/sysconfig/network
mv /etc/sysconfig/network.tmp /etc/sysconfig/network

# Also set the hostname now, some applications require it
/bin/hostname {{ hostname }}


# configure resolv.conf
cat <<EOF_DNS >> /etc/resolv.conf
domain {{ device.properties.site | downcase }}.outbrain.com
search lcl.outbrain.com {{ device.properties.site | downcase }}.outbrain.com hw.outbrain.com outbrain.com
nameserver 192.168.255.11
{% if device.properties.provisioning.network.dns %}
nameserver {{ device.properties.provisioning.network.dns }}
{% endif %}
EOF_DNS

{% case device.properties.provisioning.network.strategy %}
 {% else %}
# Network Strategy: bonded

# set max_bonds
if [ -f "/etc/modprobe.conf" ]; then
  echo "options bonding max_bonds=1" >> /etc/modprobe.conf
fi

# -----------------------------------------------------------------------------
# bond0
cat<<NIC_BOND0 > /etc/sysconfig/network-scripts/ifcfg-bond0
DEVICE="bond0"
BOOTPROTO=static
DHCPCLASS=
IPADDR="{{ device.properties.provisioning.network.ip }}"
NETMASK="{{ device.properties.provisioning.network.netmask }}"
GATEWAY="{{ device.properties.provisioning.network.gateway }}"
ONBOOT=yes
BONDING_OPTS="mode=active-backup arp_interval=30000 primary_reselect=2 arp_validate=active arp_ip_target={{ device.properties.provisioning.network.gateway }}"

NIC_BOND0

# -----------------------------------------------------------------------------
# eth0
cat<<NIC_ETH0 > /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
BOOTPROTO=none
DHCPCLASS=
$(grep -m1 HWADDR /etc/sysconfig/network-scripts/ifcfg-eth0)
ONBOOT=yes
MASTER="bond0"
SLAVE=yes
USERCTL=no

NIC_ETH0

# -----------------------------------------------------------------------------
# eth1
cat<<NIC_ETH1 > /etc/sysconfig/network-scripts/ifcfg-eth1
DEVICE=eth1
BOOTPROTO=none
DHCPCLASS=
$(grep -m1 HWADDR /etc/sysconfig/network-scripts/ifcfg-eth1)
ONBOOT=yes
MASTER="bond0"
SLAVE=yes
USERCTL=no

NIC_ETH1

{% endcase %}
