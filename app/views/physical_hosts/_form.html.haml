= semantic_form_for @physical_host, :html => {:class => 'well'} do |f|
  = f.inputs :name, :ob_name, :u, :n, :model, :serial, :mac, :power_consumption, :make, :status

  .string.clearfix.stringish#physical_host_parent_host_input
    %label{:for => "physical_host_name"} Parent Host
    .input
      %input.typeahead#physical_host_parent_host_name{ :type => "text",  "data-provide" => "typeahead", :value => (@physical_host.parent_host.name unless @physical_host.parent_host.nil?), :autocomplete => 'off'} 
      %input#physical_host_parent_host_id{:type => :hidden, :value =>  (@physical_host.parent_host.id unless @physical_host.parent_host.nil?), :name => 'physical_host[parent_host_id]'}
  
  = f.input :physical_rack, :as => :select, :collection => PhysicalRack.all, :label => 'Rack'
  - unless @physical_host.new?
    %hr
    %b PDUs
    = f.semantic_fields_for :pdus do |pdu_form|
      = pdu_form.inputs :name, :voltage, :amps
    %a.btn{:href => add_pdu_path} Add Another PDU
    %hr
  = f.input :notes, :as => :text, :input_html => { :rows => 3, :cols => 20}
  = f.buttons do
    = f.commit_button :button_html => {:class => 'btn btn-primary'}, :label => 'Save'



